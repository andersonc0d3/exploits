#define GSEL(s,r)       (((s)<<3) | r)  /* a global selector */
#define SEL_KPL 	0               /* kernel priority level */
#define SEL_UPL 3               	/* user priority level */
#define SDT_SYS386IGT   14      	/* system 386 interrupt gate */
#define SDT_SYS386TGT   15      	/* system 386 trap gate */
#define SDT_SYSTASKGT    5      	/* system task gate */
#define GCODE_SEL       4       	/* Kernel Code Descriptor (order critical: 1) */
#define IDT_BP          3       	/* #BP: Breakpoint */
#define IDT_OF          4       	/* #OF: Overflow */
#define IDT_BR          5       	/* #BR: Bound Range Exceeded */
#define IDT_UD          6       	/* #UD: Undefined/Invalid Opcode */
#define IDT_NM          7       	/* #NM: No Math Coprocessor */
#define IDT_DF          8       	/* #DF: Double Fault */
#define GPANIC_SEL      12      	/* Task state to consider panic from */

typedef void inthand_t(u_int cs, u_int ef, u_int esp, u_int ss);

struct  gate_descriptor {
        unsigned gd_looffset:16 ;       /* gate offset (lsb) */
        unsigned gd_selector:16 ;       /* gate segment selector */
        unsigned gd_stkcpy:5 ;          /* number of stack wds to cpy */
        unsigned gd_xx:3 ;              /* unused */
        unsigned gd_type:5 ;            /* segment type */
        unsigned gd_dpl:2 ;             /* segment descriptor priority level */
        unsigned gd_p:1 ;               /* segment descriptor present */
        unsigned gd_hioffset:16 ;       /* gate offset (msb) */
};

struct gate_descriptor *idt;

void setidt(idx, func, typ, dpl, selec)
        int idx;
        inthand_t *func;
        int typ;
        int dpl;
        int selec;
{
        struct gate_descriptor *ip;

        ip = idt + idx;
        ip->gd_looffset = (int)func;
        ip->gd_selector = selec;
        ip->gd_stkcpy = 0;
        ip->gd_xx = 0;
        ip->gd_type = typ;
        ip->gd_dpl = dpl;
        ip->gd_p = 1;
        ip->gd_hioffset = ((int)func)>>16 ;
}
